using System.Linq;
using System.Web.Mvc;
using YourNamespace.Models; // Replace with your actual namespace

public class InsureeController : Controller
{
    private YourDbContext db = new YourDbContext(); // Replace with your actual DbContext

    // GET: Insuree/Create
    public ActionResult Create()
    {
        return View();
    }

    // POST: Insuree/Create
    [HttpPost]
    [ValidateAntiForgeryToken]
    public ActionResult Create(Insuree insuree)
    {
        decimal quote = 50m; // Start with the base quote

        // Age calculations
        if (insuree.Age <= 18)
        {
            quote += 100m;
        }
        else if (insuree.Age >= 19 && insuree.Age <= 25)
        {
            quote += 50m;
        }
        else if (insuree.Age >= 26)
        {
            quote += 25m;
        }

        // Car year calculations
        if (insuree.CarYear < 2000)
        {
            quote += 25m;
        }
        else if (insuree.CarYear > 2015)
        {
            quote += 25m;
        }

        // Car make and model calculations
        if (insuree.CarMake == "Porsche")
        {
            quote += 25m; // Base Porsche fee
            if (insuree.CarModel == "911 Carrera")
            {
                quote += 25m; // Additional fee for 911 Carrera
            }
        }

        // Speeding ticket calculations
        quote += insuree.SpeedingTickets * 10m;

        // DUI calculations
        if (insuree.HasDUI)
        {
            quote *= 1.25m; // Increase by 25%
        }

        // Full coverage calculations
        if (insuree.IsFullCoverage)
        {
            quote *= 1.50m; // Increase by 50%
        }

        // Save the quote to the insuree record
        insuree.Quote = quote;
        
        // Save to the database
        db.Insurees.Add(insuree);
        db.SaveChanges();

        return RedirectToAction("Index"); // Redirect after creation
    }

    // GET: Insuree/Admin
    public ActionResult Admin()
    {
        var quotes = db.Insurees.Select(i => new
        {
            i.FirstName,
            i.LastName,
            i.Email,
            i.Quote
        }).ToList();

        return View(quotes);
    }

    // Create View as a string
    public ActionResult CreateView()
    {
        string view = @"
            @model YourNamespace.Models.Insuree // Replace with your actual namespace

            @{
                ViewBag.Title = ""Create Insuree"";
            }

            <h2>Create Insuree</h2>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class=""form-group"">
                    @Html.LabelFor(model => model.FirstName)
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = ""form-control"" } })
                </div>

                <div class=""form-group"">
                    @Html.LabelFor(model => model.LastName)
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = ""form-control"" } })
                </div>

                <div class=""form-group"">
                    @Html.LabelFor(model => model.Age)
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = ""form-control"" } })
                </div>

                <div class=""form-group"">
                    @Html.LabelFor(model => model.CarYear)
                    @Html.EditorFor(model => model.CarYear, new { htmlAttributes = new { @class = ""form-control"" } })
                </div>

                <div class=""form-group"">
                    @Html.LabelFor(model => model.CarMake)
                    @Html.EditorFor(model => model.CarMake, new { htmlAttributes = new { @class = ""form-control"" } })
                </div>

                <div class=""form-group"">
                    @Html.LabelFor(model => model.CarModel)
                    @Html.EditorFor(model => model.CarModel, new { htmlAttributes = new { @class = ""form-control"" } })
                </div>

                <div class=""form-group"">
                    @Html.LabelFor(model => model.SpeedingTickets)
                    @Html.EditorFor(model => model.SpeedingTickets, new { htmlAttributes = new { @class = ""form-control"" } })
                </div>

                <div class=""form-group"">
                    @Html.LabelFor(model => model.HasDUI)
                    @Html.EditorFor(model => model.HasDUI, new { htmlAttributes = new { @class = ""form-control"" } })
                </div>

                <div class=""form-group"">
                    @Html.LabelFor(model => model.IsFullCoverage)
                    @Html.EditorFor(model => model.IsFullCoverage, new { htmlAttributes = new { @class = ""form-control"" } })
                </div>

                <input type=""submit"" value=""Create"" class=""btn btn-primary"" />
            }
        ";
        return Content(view);
    }

    // Admin View as a string
    public ActionResult AdminView()
    {
        string view = @"
            @model IEnumerable<dynamic>

            @{
                ViewBag.Title = ""Admin Quotes"";
            }

            <h2>Admin Quotes</h2>

            <table class=""table"">
                <thead>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Email</th>
                        <th>Quote</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var quote in Model)
                    {
                        <tr>
                            <td>@quote.FirstName</td>
                            <td>@quote.LastName</td>
                            <td>@quote.Email</td>
                            <td>@quote.Quote</td>
                        </tr>
                    }
                </tbody>
            </table>
        ";
        return Content(view);
    }
}
