using System;

namespace EmployeeComparisonApp
{
    // Define the Employee class
    public class Employee
    {
        // Properties of the Employee class
        public int Id { get; set; } // Employee ID
        public string FirstName { get; set; } // Employee's first name
        public string LastName { get; set; } // Employee's last name

        // Overload the "==" operator to compare two Employee objects
        public static bool operator ==(Employee emp1, Employee emp2)
        {
            // Check if both objects are the same reference
            if (ReferenceEquals(emp1, emp2))
                return true;

            // If one of the objects is null, return false
            if (emp1 is null || emp2 is null)
                return false;

            // Compare the Id properties of both Employee objects
            return emp1.Id == emp2.Id;
        }

        // Overload the "!=" operator to provide the opposite comparison
        public static bool operator !=(Employee emp1, Employee emp2)
        {
            // Use the overloaded "==" operator to determine inequality
            return !(emp1 == emp2);
        }

        // Override the Equals method for proper comparison
        public override bool Equals(object obj)
        {
            // Check if the object is of type Employee
            if (obj is Employee emp)
            {
                // Compare using the overloaded "==" operator
                return this == emp;
            }
            return false; // Return false if the object is not an Employee
        }

        // Override GetHashCode method to maintain consistency with Equals
        public override int GetHashCode()
        {
            return Id.GetHashCode(); // Return the hash code of the Id property
        }
    }

    class Program
    {
        // The Main method where the application starts
        static void Main(string[] args)
        {
            // Instantiate the first Employee object and assign values
            Employee employee1 = new Employee
            {
                Id = 1, // Set Id to 1
                FirstName = "John", // Set first name to John
                LastName = "Doe" // Set last name to Doe
            };

            // Instantiate the second Employee object and assign values
            Employee employee2 = new Employee
            {
                Id = 1, // Set Id to 1 (same as employee1)
                FirstName = "Jane", // Set first name to Jane
                LastName = "Smith" // Set last name to Smith
            };

            // Compare the two Employee objects using the overloaded "==" operator
            bool areEqual = employee1 == employee2;

            // Display the result of the comparison
            Console.WriteLine($"Are employee1 and employee2 equal? {areEqual}");
        }
    }
}
